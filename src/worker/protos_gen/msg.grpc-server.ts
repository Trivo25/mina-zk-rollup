// @generated by protobuf-ts 2.8.0 with parameter server_grpc1,client_grpc1
// @generated from protobuf file "msg.proto" (syntax proto3)
// tslint:disable
import { Msg } from './msg.js';
import type * as grpc from '@grpc/grpc-js';
/**
 * @generated from protobuf service MsgSerivce
 */
export interface IMsgSerivce extends grpc.UntypedServiceImplementation {
  /**
   * @generated from protobuf rpc: Echo(Msg) returns (Msg);
   */
  echo: grpc.handleUnaryCall<Msg, Msg>;
}
/**
 * @grpc/grpc-js definition for the protobuf service MsgSerivce.
 *
 * Usage: Implement the interface IMsgSerivce and add to a grpc server.
 *
 * ```typescript
 * const server = new grpc.Server();
 * const service: IMsgSerivce = ...
 * server.addService(msgSerivceDefinition, service);
 * ```
 */
export const msgSerivceDefinition: grpc.ServiceDefinition<IMsgSerivce> = {
  echo: {
    path: '/MsgSerivce/Echo',
    originalName: 'Echo',
    requestStream: false,
    responseStream: false,
    responseDeserialize: (bytes) => Msg.fromBinary(bytes),
    requestDeserialize: (bytes) => Msg.fromBinary(bytes),
    responseSerialize: (value) => Buffer.from(Msg.toBinary(value)),
    requestSerialize: (value) => Buffer.from(Msg.toBinary(value)),
  },
};
