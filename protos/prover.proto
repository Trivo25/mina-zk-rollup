syntax = "proto3";

// === DATA TYPES ===

message VerifyRequest {
  string challenge = 1;
  string signature = 2;
  string publicKey = 3;
}

message VerifyResponse {
  bool isValid = 1;
}

message ChallengeRequest {
  string publicKey = 1;
  string keyType = 2;
}

message ChallengeResponse {
  string challenge = 1;
}

// echo request and response
message EchoRequest {
  string echo = 1;
}

message EchoResponse {
  string echo = 1;
}


message ProofRequest {
  TransactionBatch batch = 1;

}

message ProofResponse {
  StateTransitionProof proof = 1;
}

message StateTransition {
  string accountRoot = 1;
  string depositRoot = 2;
}

message TransactionBatch {
  StateTransition before = 1;
  StateTransition after = 2;
  repeated Transaction txns = 3;
}

message Transaction {
  string amount = 1;
  string nonce = 2;
  RollupAccount sender = 3;
  RollupAccount receiver = 4;
  string tokenId = 5;
  string signature = 6;

  string to = 7;
  string from = 8;

}

message RollupAccount {
  string balance = 1;
  string nonce = 2;
  string publicKey = 3;
  MerkleProof merkleProof = 4;
}

message MerkleProof {
  message MerkleProofElement {
    bool isLeft = 1;
    string sibling = 2;
  };
  repeated MerkleProofElement elements = 1;
}

message StateTransitionProof {
  StateTransition before = 1;
  StateTransition after = 2;
  string proof = 3;
}


// === SERVICES ===

service ProverService {
  rpc Echo(EchoRequest) returns (EchoResponse);
  rpc RequestChallenge(ChallengeRequest) returns(ChallengeResponse);
  rpc Verify(VerifyRequest) returns (VerifyResponse);

  rpc ProveBatch(ProofRequest) returns (ProofRequest);
}